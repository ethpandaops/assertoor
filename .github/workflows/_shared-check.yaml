
name: Reusable check workflow
on:
  workflow_call:

# shared check jobs
jobs:
  check_source:
    name: Run code checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    # setup global dependencies
    - name: Set up go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: 1.24.x
    
    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Check go fmt
      run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    - name: Run staticcheck
      run: staticcheck ./...


    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: v2.1.6

        # Optional: working directory, useful for monorepos
        # working-directory: somedir

        # Optional: golangci-lint command line arguments.
        # args: --issues-exit-code=0

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true then the all caching functionality will be complete disabled,
        #           takes precedence over all other caching options.
        # skip-cache: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        # skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        # skip-build-cache: true

    - name: Run tests
      run: go test -race -vet=off ./...

    - name: Check if all tasks have a README.md
      run: |
        for taskdir in pkg/coordinator/tasks/*/; do
          taskdir=${taskdir%*/}
          taskname=${taskdir##*/}

          if [[ ! -f "$taskdir/README.md" ]]; then
            echo "Could not find $taskdir/README.md"
            echo "Please add documentation for $taskname task"
            exit 1
          fi
        done